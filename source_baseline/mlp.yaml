!obj:pylearn2.train.Train {
    dataset: &train !obj:pylearn2.datasets.csv_dataset.CSVDataset {
        path: '%(data_dir)s/training_nn.csv',
        task: 'classification',
        one_hot: True,
        expect_labels: True,
        expect_headers: True,
        delimiter: ',',
        start: %(train_start)i,
        stop: %(train_stop)i
    },
    model: !obj:pylearn2.models.mlp.MLP {
        layers: [
                 !obj:pylearn2.models.mlp.Sigmoid {
                     layer_name: 'h0',
                     dim: %(dim_h0)i,
                     sparse_init: 15,
                 }, !obj:pylearn2.models.mlp.Softmax {
                     layer_name: 'y',
                     n_classes: 2,
                     irange: 0.
                 }
                ],
        nvis: %(num_features)i,
    },
    algorithm: !obj:pylearn2.training_algorithms.bgd.BGD {
        batch_size: %(batch_size)i,
        line_search_mode: 'exhaustive',
        conjugate: 1,
        updates_per_batch: 10,
        monitoring_dataset: {
            'train' : *train,
            'valid' : !obj:pylearn2.datasets.csv_dataset.CSVDataset {
                        path: '%(data_dir)s/training_nn.csv',
                        task: 'classification',
                        one_hot: True,
                        expect_labels: True,
                        expect_headers: True,
                        delimiter: ',',
                        start: %(valid_start)i,
                        stop: %(valid_stop)i
            },
            'test'  : !obj:pylearn2.datasets.csv_dataset.CSVDataset {
                        path: '%(data_dir)s/training_nn.csv',
                        task: 'classification',
                        one_hot: True,
                        expect_labels: True,
                        expect_headers: True,
                        delimiter: ',',
                        start: %(test_start)i,
                        stop: %(test_stop)i
            }
        },
        termination_criterion: !obj:pylearn2.termination_criteria.And {
            criteria: [
                !obj:pylearn2.termination_criteria.MonitorBased {
                    channel_name: 'valid_y_misclass'
                },
                !obj:pylearn2.termination_criteria.EpochCounter {
                    max_epochs: %(max_epochs)i
                }
            ]
        }
    },
    extensions: [
        !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {
             channel_name: 'valid_y_misclass',
             save_path: '%(data_dir)s/mlp.pkl'
        }
    ]
}
